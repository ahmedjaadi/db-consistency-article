version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: example
    ports:
      - "5432:5432"
    volumes:
      - ./scripts:/docker-entrypoint-initdb.d

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_COMPRESSION_TYPE: snappy
      KAFKA_LOG_RETENTION_MS: 20000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

  java-app-1:
    image: openjdk:21-jdk
    deploy:
      replicas: 1
    volumes:
      - ./build/libs/consistencydb-0.0.1-SNAPSHOT.jar:/app.jar
    command: [ "java", "-jar", "/app.jar" ]
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - postgres
      - zookeeper

  java-app-2:
    image: openjdk:21-jdk
    deploy:
      replicas: 1
    volumes:
      - ./build/libs/consistencydb-0.0.1-SNAPSHOT.jar:/app.jar
    command: [ "java", "-jar", "/app.jar" ]
    ports:
      - "8081:8080"
    depends_on:
      - kafka
      - postgres
      - zookeeper
